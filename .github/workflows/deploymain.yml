name: CI/CD 

on: 
  push: 
    branches: 
      - demo2
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore Manage_CLB_HTSV.csproj

      - name: Build project
        run: dotnet build Manage_CLB_HTSV.csproj --configuration Release

      - name: Test project
        run: dotnet test Manage_CLB_HTSV.csproj

      - name: Build Docker image
        run: |
          docker build --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                       --build-arg SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
                       --build-arg PFX_PASSWORD=${{ secrets.PFX_PASSWORD }} \
                       -t phuchoang1910/webapp_htsv:latest .

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                   
      - name: Push Docker image
        run: docker push phuchoang1910/webapp_htsv:latest

      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            docker pull mcr.microsoft.com/mssql/server:2017-latest 
            docker stop mssql || true && docker rm mssql || true 
            docker run --name mssql -d -p 1433:1433 --user=root -v mssql:/var/opt/mssql -e SA_PASSWORD=${{ secrets.DB_PASSWORD }} -e ACCEPT_EULA=Y mcr.microsoft.com/mssql/server:2017-latest 

            docker pull phuchoang1910/webapp_htsv:latest
            docker stop webapp_htsv || true && docker rm webapp_htsv || true
            docker run -d --name webapp_htsv -p 80:80 -p 443:443 phuchoang1910/webapp_htsv:latest
